
Actor CompatVer30_Pickups {} // for compatibility checks

//=======================================================================
//=======================================================================
// Hourglass bonus
//=======================================================================
//=======================================================================

Actor UndroppedProc : CustomInventory { States { Pickup: TNT1 A 0 A_ChangeFlag("DROPPED", false) Stop } }

Actor Hourglass : CustomInventory 15508
{
	//$NotAngled
	//$Category "QCDE Pickups"
	//$Color 3
	//$Title "Hourglass (-10%)"
	Radius 20
	Height 48
	-COUNTITEM
	Tag "$TAG_Hourglass" // "Hourglass"
	Inventory.PickupMessage "$GOT_Hourglass" // "Picked up an equipment bonus."
	Inventory.PickUpSound "QC/Items/HourglassPick"
	Scale 0.7
	Inventory.RespawnTics 525 // 15sec
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_JumpIf(ACS_NamedExecuteWithResult("checkPracticeMode") == 1, "Death") 
		TNT1 A 0 ACS_NamedExecuteWithResult("QCDE_UndropDuringInit")
		SAND A -1 Light(YellowSmallPoint3) Bright ACS_NamedExecuteWithResult("QCDE_PickupSpawned", true)
		Loop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("Class_Sarge", 1, "GiveArmor")
		TNT1 A 0 A_JumpIfInventory("Class_Terminator", 1, "GiveRockets")
		TNT1 A 0 A_JumpIfInventory("Class_DukeNukem", 1, "GiveDuke")
		TNT1 A 0 A_JumpIfInventory("Class_Sam", 1, "GiveBullets")
		TNT1 A 0 A_JumpIfInventory("Class_Brock", 1, "GiveHealth")
	CooldownPickup:
		TNT1 A 0 A_JumpIfInventory("ActiveInProgress", 1, "Death")
		TNT1 A 0 A_JumpIfInventory("AbilityCooldownToken", 1, "OK")
	Death:
		TNT1 A 0
		Fail
	OK:
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"VeryOK")
		TNT1 A 0 ACS_NamedExecuteAlways("QCDE_Hourglass",0,10)
		Stop
	VeryOK:
		TNT1 A 0 ACS_NamedExecuteAlways("QCDE_Hourglass",0,20)
		Stop
	GiveArmor:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Sarge_Armor_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_PlaySound("QC/Items/ArmorShardQ3Pick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("QCSargeArmorGain", 1, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveHealth:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Brock_Health_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_PlaySound("QC/Items/HealthVial",CHAN_AUTO)
		TNT1 A 0 ACS_NamedExecuteWithResult("HealthGiver",CallACS("MaxHealth"),10,99)
		Stop
	GiveRockets:
		TNT1 A 0 A_JumpIf(CallACS("MultiplayerCheck",0,0,0,0) < 2, "CooldownPickup")
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Terminator_Rockets_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"GiveMoarRockets")
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("TerminatorRockets", 2, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveMoarRockets:
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("TerminatorRockets", 4, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveDuke:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_DukeNukem_Ammo_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"GiveMoarDuke")
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("DukeAmmo", 12, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveMoarDuke:
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("DukeAmmo", 18, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveBullets:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Sam_Bullets_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"GiveMoarBullets")
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("SeriousBullets", 40, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveMoarBullets:
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("SeriousBullets", 60, 0, GIF_FORCESERVERSIDE)
		Stop
	}
}

Actor HourglassNoGravity : Hourglass 15518
{
	//$NotAngled
	//$Category "QCDE Pickups"
	//$Color 3
	//$Title "Hourglass (-10%) (No Gravity)"
	+NOGRAVITY
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_JumpIf(ACS_NamedExecuteWithResult("checkPracticeMode") == 1, "Super::Death")
		TNT1 A 0 ACS_NamedExecuteWithResult("QCDE_UndropDuringInit")
		SAND A -1 Light(YellowSmallPoint3) Bright ACS_NamedExecuteWithResult("QCDE_PickupSpawned", false) // don't force remonstration
		Loop
	}
}

Actor BigHourglass : Hourglass 15509
{
	//$NotAngled
	//$Category "QCDE Pickups"
	//$Color 3
	//$Title "Big Hourglass (-30%)"
	Tag "$TAG_BigHourglass" // "Big Hourglass"
	Inventory.PickupMessage "$GOT_BigHourglass" // "Picked up a big equipment bonus."
	Inventory.PickUpSound "QC/Items/HourglassPick"
	Scale 0.83
	Inventory.RespawnTics 1050 // 30sec
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_JumpIf(ACS_NamedExecuteWithResult("checkPracticeMode") == 1, "Super::Death")
		TNT1 A 0 ACS_NamedExecuteWithResult("QCDE_UndropDuringInit")
		SAND B -1 Light(YellowSmallPoint2) Bright ACS_NamedExecuteWithResult("QCDE_PickupSpawned")
		Loop
	OK:
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"VeryOK")
		TNT1 A 0 ACS_NamedExecuteAlways("QCDE_Hourglass",0,33)
		Stop
	VeryOK:
		TNT1 A 0 ACS_NamedExecuteAlways("QCDE_Hourglass",0,50)
		Stop
	GiveArmor:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Sarge_Armor_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_PlaySound("QC/Items/ArmorShardQ3Pick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("QCSargeArmorGainBig", 1, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveHealth:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Brock_Health_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_PlaySound("QC/Items/HealthVial",CHAN_AUTO)
		TNT1 A 0 ACS_NamedExecuteWithResult("HealthGiver",CallACS("MaxHealth"),30,99)
		Stop
	GiveRockets:
		TNT1 A 0 A_JumpIf(CallACS("MultiplayerCheck",0,0,0,0) < 2, "CooldownPickup")
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Terminator_Rockets_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"GiveMoarRockets")
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("TerminatorRockets", 5, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveMoarRockets:
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("TerminatorRockets", 10, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveDuke:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_DukeNukem_Ammo_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"GiveMoarDuke")
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("DukeAmmo",30, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveMoarDuke:
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("DukeAmmo",45, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveBullets:
		TNT1 A 0 A_JumpIf(CallACS("QCDE_Sam_Bullets_Full",0,0,0,0)==1, "Death")
		TNT1 A 0 A_JumpIfInventory("ImprovedHourglasses",1,"GiveMoarBullets")
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("SeriousBullets",100, 0, GIF_FORCESERVERSIDE)
		Stop
	GiveMoarBullets:
		TNT1 A 0 A_PlaySound("QC/Items/AmmoPick",CHAN_AUTO)
		TNT1 A 0 A_GiveInventory("SeriousBullets",150, 0, GIF_FORCESERVERSIDE)
		Stop
	}
}


//=======================================================================
//
// Backpacks (replaced in DM)
//
//=======================================================================

Actor QCBackPack : CustomInventory replaces Backpack 15510
{
	//$NotAngled
	//$Category "QCDE Pickups"
	//$Color 3
	//$Title "Backpack"
	Scale 0.6
	Tag "$TAG_QCBackPack" // "Backpack"
	Inventory.PickupMessage "$GOT_QCBackPack" // "Picked up a backpack."
	Height 32
	+INVENTORY.ALWAYSPICKUP
	+SERVERNETID
	Inventory.PickUpSound "QC/Items/Backpack"
	States
	{
	Spawn:
		BPAK B -1 NoDelay //ACS_NamedExecuteWithResult("QCDE_PickupSpawned")
		Stop
	Pickup:
		TNT1 A 0 A_JumpIf(CallACS("MultiplayerCheck",0,0,0,0) >= 2, "DMPickup")
		Goto CoopPickup
	DMPickup:
		TNT1 A 0 A_GiveInventory("QCBulletAmmo",20, 0, GIF_FORCESERVERSIDE)
		TNT1 A 0 A_GiveInventory("QCShellAmmo",	 4, 0, GIF_FORCESERVERSIDE)
		TNT1 A 0 A_GiveInventory("QCNailAmmo",	20, 0, GIF_FORCESERVERSIDE)
		TNT1 A 0 A_GiveInventory("QCBoltAmmo", 	 4, 0, GIF_FORCESERVERSIDE)
		TNT1 A 0 A_GiveInventory("QCRocketAmmo", 2, 0, GIF_FORCESERVERSIDE)
		TNT1 A 0 A_GiveInventory("QCCoilAmmo", 	20, 0, GIF_FORCESERVERSIDE)
		TNT1 A 0 A_GiveInventory("QCSlugAmmo", 	 4, 0, GIF_FORCESERVERSIDE)
		TNT1 A 0 A_GiveInventory("QCBFGAmmo",	 4, 0, GIF_FORCESERVERSIDE)
		Stop
	CoopPickup:
		TNT1 A 0 A_GiveInventory("QCBackpackItem", 1, 0, GIF_FORCESERVERSIDE) // native ammo capacitor
		Stop
	}
}

Actor QCBackpackItem : BackpackItem
{
	+SERVERNETID
}

// Used to prevent the vanilla Terminator orb from spawning
ACTOR NoTerminator replaces Terminator
{
	States
	{
	Spawn:
		TNT1 A 0
		Stop
	}
}

// Used to prevent the vanilla Possession stone from spawning
ACTOR NoPossession replaces PossessionStone
{
	States
	{
	Spawn:
		TNT1 A 0
		Stop
	}
}
