// --------------------------------------------------------------------------
//
// Gauntlet
// Weapon sprite by Franco Tieppo
// Weapon code by DBT
//
// --------------------------------------------------------------------------

Actor QCGauntlet : QCWeapon
{
	Weapon.SwaySpeed 3.2
	Weapon.Kickback 0
	Weapon.SelectionOrder 2000
	Inventory.PickupMessage "$GOT_QCGauntlet" // "Picked up the Gauntlet."
	Obituary "$OB_QCGauntlet" // "%o got shredded by %k's gauntlet."
	Tag "$TAG_QCGauntlet" // "Gauntlet"
	+INVENTORY.UNDROPPABLE
	+WEAPON.MELEEWEAPON		
	States
	{
	Spawn:
		TNT1 A 0
		Stop	
	//-----------------------
	// Ready Seq
	//-----------------------
	Ready:
		QCG1 A 0 A_JumpIfInventory("Class_Painkiller",1,"PKReady")
		QCG1 A 0 A_PlaySound("QC/Weapons/Gauntlet/Idle",5,1,1)
		QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
		QCG1 A 3 A_WeaponReady
		Goto Ready+2
		
		ReadyCantFire:
			QCG1 A 0 A_StopSound(5)
			QCG1 A 0 A_StopSound(6)
			"####" "#" 0 A_ZoomFactor(1.0)
			"####" "#" 0 A_TakeInventory("WeaponZoomedToken",32767)
		RCFLooper:
			QCG1 A 4 A_WeaponReady(WRF_NOFIRE)
			QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"RCFLooper")
			Goto Ready
	//-----------------------
	// Select/Deselect Seq
	//-----------------------
	Select:
		QCG1 A 0 A_JumpIfInventory("Class_Painkiller",1,"PKSelect")
		QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,2)
		QCG1 A 0 A_PlaySound("QC/Weapons/Gauntlet/Select",6,1,0,3) //Not in Weapon.UpSound because it interrupts CHAN_WEAPON sounds
		"####" "#" 0 A_StopSound(5) //stops any weapon looping sound
		"####" "#" 0 A_ZoomFactor(1.0)
		"####" "#" 0 A_TakeInventory("WeaponZoomedToken",32767)
		"####" "#" 0 A_TakeInventory("PunchedAlready",32767)
	SelectLooper:
		"####" "#" 1 A_Raise
		"####" "###" 0 A_Raise
		Loop
		
	Deselect:
		"####" A 0 A_StopSound(CHAN_WEAPON)
		"####" A 0 A_StopSound(5)
		"####" "#" 0 A_ZoomFactor(1.0)
		"####" "#" 0 A_TakeInventory("WeaponZoomedToken",32767)
		"####" "#" 0 A_TakeInventory("PunchedAlready",32767)
		"####" "#" 0 A_JumpIfInventory("PKTipDetached",1,"PKDetachedDeSelect")
	DeselectLooper:
		"####" "#" 1 A_Lower
		"####" "###" 0 A_Lower
		Loop
		
	//-----------------------
	// Fire Seq
	//-----------------------
	Fire:
		QCG1 A 0 A_JumpIfInventory("Class_Painkiller",1,"PKFire")
		QCG1 A 0 A_JumpIfInventory("PowerQuad",1,"QuadSound")
		Goto NormalSound
		
		NormalSound:
			QCG1 A 0 A_PlaySound("QC/Weapons/Gauntlet/FireStartLoop",5,1,1)
			Goto FirePostSoundCheck
		QuadSound:
			QCG1 A 0 A_PlaySound("QC/Weapons/Gauntlet/Quad/FireStartLoop",5,1,1)
			Goto FirePostSoundCheck
			
	FirePostSoundCheck:
		TNT1 A 0 A_AlertMonsters
		QCG1 B 1 Offset(-3,21)
		QCG1 A 1 Offset(-12,12)
		QCG1 A 0 A_JumpIfInventory("DMToken",1,"DMFireLooper")
		QCG1 A 0 A_JumpIfInventory("GNT_UG_Burn",1,"Burner")
		QCG1 A 0 A_JumpIfInventory("GNT_UG_Omni",1,"Omnier")
		Goto FireLooper1
		
		FireLooper1:
			QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
			QCG1 C 1 A_CustomPunch((random(3,5)*10),1,0,"GauntletPuff",56)
			QCG1 DC 1
			QCG1 C 0 A_ReFire("FireLooper2")
			Goto EndFire
		FireLooper2:
			QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
			QCG1 D 1 
			QCG1 CD 1
			QCG1 B 0 A_ReFire("FireLooper1")
			Goto EndFire
		
		Omnier:
			QCG1 A 0 A_JumpIfInventory("GNT_UG_Burn",1,"BurnOmniLooper1")
			Goto OmniLooper1
		
			OmniLooper1:
				QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
				QCG1 C 0 A_CustomPunch(1,1,0,"GauntletPuff",56)
				QCG1 C 1 A_FireCustomMissile("OmnislashProjectile",0,0)
				QCG1 DC 1
				QCG1 C 0 A_ReFire("OmniLooper2")
				Goto EndFire
			OmniLooper2:
				QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
				QCG1 D 1 A_FireCustomMissile("OmnislashProjectileFake",0,0)
				QCG1 CD 1
				QCG1 B 0 A_ReFire("OmniLooper1")
				Goto EndFire
				
		Burner:
			QCG1 A 0 A_JumpIfInventory("GNT_UG_Omni",1,"BurnOmniLooper1")
			Goto BurnLooper1
			
			BurnLooper1:
				QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
				QCG1 C 0 A_CustomPunch((random(3,5)*10),1,0,"GauntletPuffBurn",56)
				QCG1 A 0 A_Jump(128,2)
				QCG1 C 0 A_FireCustomMissile("BurnerFlamelet",0,0,random(6,-6),random(4,-4))
				QCG1 C 1 
				QCG1 DC 1 
				QCG1 C 0 A_ReFire("BurnLooper2")
				Goto EndFire
			BurnLooper2:
				QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
				QCG1 A 0 A_Jump(128,2)
				QCG1 D 0 A_FireCustomMissile("BurnerFlamelet",0,0,random(6,-6),random(4,-4))
				QCG1 D 1 
				QCG1 CD 1 
				QCG1 B 0 A_ReFire("BurnLooper1")
				Goto EndFire
			
			BurnOmniLooper1:
				QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
				QCG1 C 0 A_CustomPunch(1,1,0,"GauntletPuff",56)
				QCG1 C 0 A_FireCustomMissile("OmnislashFireProjectile",0,0)
				QCG1 C 1 
				QCG1 DC 1
				QCG1 C 0 A_ReFire("BurnOmniLooper2")
				Goto EndFire
			BurnOmniLooper2:
				QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
				QCG1 D 0 A_FireCustomMissile("OmnislashFireProjectileFake",0,0)
				QCG1 D 1
				QCG1 CD 1
				QCG1 B 0 A_ReFire("BurnOmniLooper1")
				Goto EndFire
			
			
		DMFireLooper:
			QCG1 A 0 A_JumpIfInventory("Instagib",1,"IGRefire")
		NormalDMRefire:
			QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
			
			QCG1 C 1 A_CustomPunch(75,1,0,"GauntletPuff_DM",56)
			QCG1 D 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"GauntStop")
			
			QCG1 C 1 A_CustomPunch(75,1,0,"GauntletPuff_DM_NoFX",56)
			QCG1 D 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"GauntStop")
			
			QCG1 B 0 A_ReFire("NormalDMRefire")
			Goto EndFire
			
		IGRefire:
			QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
			
			QCG1 C 1 A_CustomPunch(999,1,0,"GauntletPuff_DM",56)			
			QCG1 D 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"GauntStop")
			
			QCG1 C 1 A_CustomPunch(999,1,0,"GauntletPuff_DM_NoFX",56)	
			QCG1 D 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"GauntStop")
			
			QCG1 B 0 A_ReFire("IGRefire")
			Goto EndFire
			
	GauntStop:
		QCG1 A 0 A_PlaySound("QC/Weapons/Gauntlet/Idle",5,1,1)
		QCG1 A 0 A_PlaySound("QC/Weapons/Gauntlet/FireEnd",CHAN_WEAPON,1,0)
		QCG1 CDCDCABB 1
		QCG1 A 1 Offset(-3,21) A_TakeInventory("PunchedAlready",32767)
		QCG1 A 11 Offset(-1,31)
		Goto Ready
	EndFire:
		QCG1 A 0 A_PlaySound("QC/Weapons/Gauntlet/Idle",5,1,1)
		QCG1 C 0 A_PlaySound("QC/Weapons/Gauntlet/FireEnd",CHAN_WEAPON,1,0)
		QCG1 A 1 Offset(-3,21) A_TakeInventory("PunchedAlready",32767)
		QCG1 B 1 Offset(-2,26) A_WeaponReady(WRF_NOBOB)
		QCG1 B 1 Offset(-1,30) A_WeaponReady(WRF_NOBOB)
		Goto Ready
			
	//-----------------------
	// Fire Seq / Zoom
	//-----------------------
	AltFire:
		QCG1 A 0 A_JumpIfInventory("Class_Painkiller",1,"PKAltFire")
		QCG1 A 0 A_JumpIfInventory("DMToken",1,"StartZoomChecks")	//in Deathmatch, allow zoom checks by Default
	NoZoom:
		"####" A 2 A_WeaponReady(WRF_NOSECONDARY)	//dummy state in case player is holding "alt fire" all along
		"####" A 0 A_Refire("NoZoom")
		Goto Ready
	StartZoomChecks:
		"####" A 0 A_JumpIfInventory("WeaponZoomedToken", 1, "ZoomOut")
	ZoomDM:
		"####" "#" 0 A_ZoomFactor(1.8)
	ContinueZoom:
		"####" "#" 0 A_GiveInventory("WeaponZoomedToken",1)
	ZoomInHeld:
		"####" A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
		"####" A 1 
		"####" "#" 1 A_Refire("ZoomInHeld")
		Goto Ready
		
		ZoomOut:
			"####" "#" 0 A_ZoomFactor(1.0) 
			"####" "#" 0 A_TakeInventory("WeaponZoomedToken",32767)
		ZoomOutHeld:
			"####" A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
			"####" A 1 
			"####" "#" 1 A_Refire("ZoomOutHeld")
			Goto Ready
			
			
			
			
			
			
			
			
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	// And a whole new section just for the Painkiller weapon.
	// This is why replacing weapons is not easy kids.
	// The definition needs to exists within the QC gauntlet actor, for the
	// gauntlet keybind to still work.
	// And it's fully separate states instead of "#", for custom behaviour
	// and timings. It doesn't have to have 1:1 times to gauntlet
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	PKReady:
		WP30 A 0 
		WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
		WP30 A 0 A_JumpIfInventory("PKTipDetached",1,"PKCallTipBack")
		WP30 A 3 A_WeaponReady
		Goto PKReady+1
		
		PKReadyCantFire:
			WP30 A 0 A_StopSound(5)
			WP30 A 0 A_StopSound(6)
			"####" "#" 0 A_ZoomFactor(1.0)
			"####" "#" 0 A_TakeInventory("WeaponZoomedToken",32767)
		PKRCFLooper:
			WP30 A 4 A_WeaponReady(WRF_NOFIRE)
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKRCFLooper")
			Goto Ready
	PKFire:
		TNT1 A 0 A_JumpIfInventory("PKTipDetached",1,"PKCallTipBack")
		WP30 A 0 A_PlaySound("QC/Abilities/Painkiller/Weapon/SpinStartLoop",5,1,1)
		Goto PKFirePostSoundCheck
			
	PKFirePostSoundCheck:
		TNT1 A 0 A_AlertMonsters
		WP30 A 1
		WP30 B 1
		WP30 A 0 A_JumpIfInventory("DMToken",1,"PKDMFireLooper")
		WP30 A 0 A_JumpIfInventory("GNT_UG_Burn",1,"PKBurner")
		WP30 A 0 A_JumpIfInventory("GNT_UG_Omni",1,"PKOmnier")
		Goto PKFireLooper1
		
		PKFireLooper1:
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
			WP30 F 1 A_CustomPunch((random(3,5)*10),1,0,"PKGauntletPuff",56)
			WP30 GH 1
			WP30 C 0 A_ReFire("PKFireLooper2")
			Goto PKEndFire
		PKFireLooper2:
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
			WP30 I 1 
			WP30 FG 1
			WP30 B 0 A_ReFire("PKFireLooper3")
			Goto PKEndFire
		PKFireLooper3:
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
			WP30 H 1 A_CustomPunch((random(3,5)*10),1,0,"PKGauntletPuff",56)
			WP30 IF 1
			WP30 B 0 A_ReFire("PKFireLooper4")
			Goto PKEndFire
		PKFireLooper4:
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
			WP30 G 1 
			WP30 HI 1
			WP30 B 0 A_ReFire("PKFireLooper1")
			Goto PKEndFire
		
		PKOmnier:
			QCG1 A 0 A_JumpIfInventory("GNT_UG_Burn",1,"PKBurnOmniLooper1")
			Goto PKOmniLooper1
		
			PKOmniLooper1:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 C 0 A_CustomPunch(1,1,0,"PKGauntletPuff",56)
				WP30 F 1 A_FireCustomMissile("OmnislashProjectile",0,0)
				WP30 GH 1
				WP30 C 0 A_ReFire("PKOmniLooper2")
				Goto PKEndFire
			PKOmniLooper2:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 I 1 A_FireCustomMissile("OmnislashProjectileFake",0,0)
				WP30 FG 1
				WP30 B 0 A_ReFire("PKOmniLooper3")
				Goto PKEndFire
			PKOmniLooper3:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 C 0 A_CustomPunch(1,1,0,"PKGauntletPuff",56)
				WP30 H 1 A_FireCustomMissile("OmnislashProjectile",0,0)
				WP30 IF 1
				WP30 C 0 A_ReFire("PKOmniLooper4")
				Goto PKEndFire
			PKOmniLooper4:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 G 1 A_FireCustomMissile("OmnislashProjectileFake",0,0)
				WP30 HI 1
				WP30 B 0 A_ReFire("PKOmniLooper1")
				Goto PKEndFire
				
		PKBurner:
			WP30 A 0 A_JumpIfInventory("GNT_UG_Omni",1,"PKBurnOmniLooper1")
			Goto PKBurnLooper1
			
			PKBurnLooper1:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 C 0 A_CustomPunch((random(3,5)*10),1,0,"PKGauntletPuffBurn",56)
				WP30 A 0 A_Jump(128,2)
				WP30 C 0 A_FireCustomMissile("BurnerFlamelet",0,0,random(6,-6),random(4,-4))
				WP30 F 1 
				WP30 GH 1 
				WP30 C 0 A_ReFire("PKBurnLooper2")
				Goto PKEndFire
			PKBurnLooper2:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 A 0 A_Jump(128,2)
				WP30 D 0 A_FireCustomMissile("BurnerFlamelet",0,0,random(6,-6),random(4,-4))
				WP30 I 1 
				WP30 FG 1 
				WP30 B 0 A_ReFire("PKBurnLooper3")
				Goto PKEndFire
			PKBurnLooper3:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 C 0 A_CustomPunch((random(3,5)*10),1,0,"PKGauntletPuffBurn",56)
				WP30 A 0 A_Jump(128,2)
				WP30 C 0 A_FireCustomMissile("BurnerFlamelet",0,0,random(6,-6),random(4,-4))
				WP30 H 1 
				WP30 IF 1 
				WP30 C 0 A_ReFire("PKBurnLooper4")
				Goto PKEndFire
			PKBurnLooper4:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 A 0 A_Jump(128,2)
				WP30 D 0 A_FireCustomMissile("BurnerFlamelet",0,0,random(6,-6),random(4,-4))
				WP30 G 1 
				WP30 HI 1 
				WP30 B 0 A_ReFire("PKBurnLooper1")
				Goto PKEndFire
			
			
			PKBurnOmniLooper1:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 C 0 A_CustomPunch(1,1,0,"PKGauntletPuff",56)
				WP30 C 0 A_FireCustomMissile("OmnislashFireProjectile",0,0)
				WP30 F 1 
				WP30 GH 1
				WP30 C 0 A_ReFire("PKBurnOmniLooper2")
				Goto PKEndFire
			PKBurnOmniLooper2:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 D 0 A_FireCustomMissile("OmnislashFireProjectileFake",0,0)
				WP30 I 1
				WP30 FG 1
				WP30 B 0 A_ReFire("PKBurnOmniLooper3")
				Goto PKEndFire
			PKBurnOmniLooper3:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 C 0 A_CustomPunch(1,1,0,"PKGauntletPuff",56)
				WP30 C 0 A_FireCustomMissile("OmnislashFireProjectile",0,0)
				WP30 H 1 
				WP30 IF 1
				WP30 C 0 A_ReFire("PKBurnOmniLooper4")
				Goto PKEndFire
			PKBurnOmniLooper4:
				WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
				WP30 D 0 A_FireCustomMissile("OmnislashFireProjectileFake",0,0)
				WP30 G 1
				WP30 HI 1
				WP30 B 0 A_ReFire("PKBurnOmniLooper1")
				Goto PKEndFire
			
			
		PKDMFireLooper:
			WP30 A 0 A_JumpIfInventory("Instagib",1,"PKIGRefire")
		PKNormalDMRefire:
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
			
			WP30 F 1 A_CustomPunch(90,1,0,"PKGauntletPuff_DM",56)			
			WP30 G 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"PKGauntStop")
			
			WP30 H 1 A_CustomPunch(90,1,0,"PKGauntletPuff_DM_NoFX",56)	
			WP30 I 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"PKGauntStop")
			
			WP30 B 0 A_ReFire("PKNormalDMRefire")
			Goto PKEndFire
			
		PKIGRefire:
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
			
			WP30 F 1 A_CustomPunch(999,1,0,"PKGauntletPuff_DM",56)			
			WP30 G 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"PKGauntStop")
			
			WP30 H 1 A_CustomPunch(999,1,0,"PKGauntletPuff_DM_NoFX",56)	
			WP30 I 1
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"PKGauntStop")
			
			WP30 B 0 A_ReFire("PKIGRefire")
			Goto PKEndFire
			
	PKGauntStop:
		WP30 A 0 A_StopSound(5)
		WP30 A 0 A_PlaySound("QC/Abilities/Painkiller/Weapon/SpinStop",CHAN_WEAPON,1,0)
		WP30 FGHIFGHI 1
		WP30 E 3 A_TakeInventory("PunchedAlready",32767)
		WP30 A 8 
		Goto PKReady
	PKEndFire:
		WP30 C 0 A_PlaySound("QC/Abilities/Painkiller/Weapon/SpinStop",CHAN_5,1,0)
		WP30 E 1 A_TakeInventory("PunchedAlready",32767)
		WP30 E 1 A_WeaponReady(WRF_NOBOB)
		WP30 E 1 A_WeaponReady(WRF_NOBOB)
		Goto PKReady
			
			
			
	//-----------------------
	// Fire Seq / Zoom
	//-----------------------
	PKAltFire:
		TNT1 A 0 A_JumpIfInventory("PKTipDetached",1,"PKCallTipBack")
		TNT1 A 0 A_PlaySound("QC/Abilities/Painkiller/Weapon/ShootTip",CHAN_WEAPON,1.0)
		TNT1 A 0 A_JumpIfInventory("DMToken",1,"PKFireBlade_DM")
		
		PKFireBlade:
			WP30 N 1 Bright 
			WP30 B 1 A_FireCustomMissile("PKProjectile", 0, false, 0, 5)
			Goto PKResumeFireBlade
		PKFireBlade_DM:
			WP30 N 1 Bright 
			WP30 B 1 A_FireCustomMissile("PKProjectileDM", 0, false, 0, 5)
			Goto PKResumeFireBlade
		
	PKResumeFireBlade:
		WP30 B 0 A_AlertMonsters
		WP30 B 0 A_GiveInventory("PKTipDetached",1)
		//detach animation
		WP30 C 0 A_JumpIfInventory("PKisBack",1,"PKPlayIsBackSound")
		WP30 C 2 
		WP30 C 0 A_JumpIfInventory("PKisBack",1,"PKPlayIsBackSound")
		WP30 C 2 
	PKWaiterLoopIfHoldingAltFire:	
		WP30 C 2 A_JumpIfInventory("PKisBack",1,"PKPlayIsBackSound")
		WP30 C 0 A_Refire("PKWaiterLoopIfHoldingAltFire") //if player holds altfire after shooting the tip, it loops to do nothing
		goto WaitingForTip
	
		//Reached after tip was shot, player releases alt fire, and weapons goes here
		WaitingForTip:	
			WP30 C 0 A_JumpIfInventory("PKisBack",1,"PKPlayIsBackSound")
			WP30 C 2 A_WeaponReady(WRF_NOBOB) //if player presses fire or alt fire, it will go to "PKCallTipBack"
			Loop
		
		PKCallTipBack:
			WP30 C 0 A_GiveInventory("IWantMyPKBack",1)
			WP30 C 2 A_JumpIfInventory("PKisBack",1,"PKPlayIsBackSound")
			Wait
		
		
	PKPlayIsBackSound:
		TNT1 A 0 A_TakeInventory("PKisBack",1)
		TNT1 A 0 A_TakeInventory("IWantMyPKBack",1)
		TNT1 A 0 A_TakeInventory("PKTipDetached",1)
		WP30 N 0 A_PlaySound("QC/Abilities/Painkiller/Weapon/TipReturn",CHAN_WEAPON,1.0)
		WP30 N 1 Bright Offset(10,42)
		WP30 N 1 Bright Offset(20,52)
		WP30 A 4 Offset(20,52)
		WP30 A 1 Offset(18,50)
		WP30 A 1 Offset(16,48)
		WP30 A 1 Offset(14,46)
		WP30 A 1 Offset(12,44)
		WP30 A 1 Offset(10,42)
		WP30 A 1 Offset(8,40)
		WP30 A 1 Offset(6,38)
		WP30 A 1 Offset(4,36)
		WP30 A 1 Offset(3,35)
		WP30 A 1 Offset(2,34)
		WP30 A 1 Offset(1,33)
		Goto PKReady
	//-----------------------
	// Select/Deselect Seq
	//-----------------------
	PKSelect:
		WP30  A 0 A_JumpIfInventory("NoWeaponFireToken",1,2)
		WP30  A 0 A_PlaySound("QC/Weapons/Switch",6,1,0,3)
		"####" "#" 0 A_StopSound(5) //stops any weapon looping sound
		"####" "#" 0 A_ZoomFactor(1.0)
		"####" "#" 0 A_TakeInventory("WeaponZoomedToken",32767)
		"####" "#" 0 A_TakeInventory("PunchedAlready",32767)
		"####" "#" 0 A_JumpIfInventory("PKTipDetached",1,"RaiseDetached")
	PKSelectLooper:
		"####" "#" 1 A_Raise
		"####" "###" 0 A_Raise
		Loop
	RaiseDetached:
		"####" C 1 A_Raise
		"####" "###" 0 A_Raise
		Loop
		
	PKDetachedDeSelect:
		WP30 C 0 A_Jump(255,"DeselectLooper")
		Goto DeselectLooper
	}
}



//-----------------------------------
// Puff for SP/COOP
Actor GauntletPuff
{
	+NOINTERACTION +NOTONAUTOMAP
	+CLIENTSIDEONLY
	+PUFFGETSOWNER
	+PUFFONACTORS
	+FORCEXYBILLBOARD
	+MTHRUSPECIES
	Renderstyle Add
	Decal "GauntletDecal"
	Scale 0.35
	DamageType "ZombieGibber"
	States
	{
	Spawn:	//Hit non bleeder
		TNT1 A 0 NODELAY A_GiveToTarget("HitBeepMid",1)
		Goto Crash
	XDeath:	//hit bleeder
		TNT1 A 0 A_GiveToTarget("HitBeepMid",1)
		TNT1 A 10 A_PlaySound("QC/Weapons/Gauntlet/Hit",7,1,0,9)
		Stop
	Crash:	//hit everything else
		TNT1 A 0 A_PlaySound("BulletHitConcreteRandom",7,0.6,0,9)
	Choose:	
		TNT1 A 0 A_Jump(256,"Type1","Type2")
	Type1:
		FX57 ABCDEFGHIJ 2 Bright
		Stop
	Type2:
		FX57 KLMNOPQRST 2 Bright
		Stop
	}
}



//-----------------------------------
// Puffs for DM
// See "Decorate/Abilities/Painkiller.QCD" for those puffs

Actor GauntletPuff_DM
{
	+NOINTERACTION +NOTONAUTOMAP
	+CLIENTSIDEONLY
	+PUFFGETSOWNER
	+PUFFONACTORS
	+FORCEXYBILLBOARD
	Renderstyle Add
	Decal "GauntletDecal"
	Scale 0.35
	Obituary "$OB_GauntletPuff_DM" // "%o was pummeled by %k." // variation line
	States
	{
	Spawn:	//Hit non bleeder
		TNT1 A 0 NODELAY A_GiveToTarget("HitBeepMid",1)
		Goto Crash
	XDeath: //hit bleeder
		TNT1 A 0 A_GiveToTarget("PunchedAlready",1)
		TNT1 A 0 A_GiveToTarget("HitBeepBig",1)
		//Medals start
		TNT1 A 0 A_GiveToTarget("GDamageToken",1)
		//Medals end
		TNT1 A 10 A_PlaySound("QC/Weapons/Gauntlet/Hit",7,1,0,9)
		Stop
	Crash:	//hit everything else
		TNT1 A 0 A_PlaySound("BulletHitConcreteRandom",7,0.6,0,9)
	Choose:	
		TNT1 A 0 A_Jump(256,"Type1","Type2")
	Type1:
		FX57 ABCDEFGHIJ 2 Bright
		Stop
	Type2:
		FX57 KLMNOPQRST 2 Bright
		Stop
	}
}

Actor GauntletPuff_DM_NoFX
{
	+NOINTERACTION +NOTONAUTOMAP
	+CLIENTSIDEONLY
	+PUFFGETSOWNER
	+PUFFONACTORS
	+FORCEXYBILLBOARD
	Obituary "$OB_GauntletPuff_DM_NoFX" // "%o tried to stop %k's rotating blade with a wrong limb." // variation line
	States
	{
	Spawn:
	Crash:
		TNT1 A 0 
		TNT1 A 10 A_PlaySound("BulletHitConcreteRandom",7,0.6,0,9)
		Stop
	XDeath:
		TNT1 A 0 A_GiveToTarget("PunchedAlready",1)
		TNT1 A 0 A_GiveToTarget("HitBeepBig",1)
		TNT1 A 10 A_PlaySound("BulletHitFleshRandom",7,0.6,0,9)
		Stop
	}
}



Actor QCGauntlet_Bot : QCGauntlet
{	
	States
	{
		DMFireLooper:
			QCG1 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"ReadyCantFire")
			
			QCG1 B 1 A_CustomPunch(75,1,0,"GauntletPuff_DM",70)			
			QCG1 A 1 A_Recoil(-4)
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"GauntStop")
			
			QCG1 B 1 A_CustomPunch(75,1,0,"GauntletPuff_DM_NoFX",70)	
			QCG1 A 1 A_Recoil(-3)
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"GauntStop")
			
			QCG1 B 0 A_ReFire("DMFireLooper")
			Goto EndFire
			
		PKDMFireLooper:
			WP30 A 0 A_JumpIfInventory("Instagib",1,"PKIGRefire")
		PKNormalDMRefire:
			WP30 A 0 A_Jump(10,"AltFire")
			WP30 A 0 A_JumpIfInventory("NoWeaponFireToken",1,"PKReadyCantFire")
			
			WP30 F 1 A_CustomPunch(90,1,0,"PKGauntletPuff_DM",56)			
			WP30 G 1 A_Recoil(-4)
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"PKGauntStop")
			
			WP30 H 1 A_CustomPunch(90,1,0,"PKGauntletPuff_DM_NoFX",56)	
			WP30 I 1 A_Recoil(-3)
			TNT1 A 0 A_JumpIfInventory("PunchedAlready",1,"PKGauntStop")
			
			WP30 B 0 A_ReFire("PKNormalDMRefire")
			Goto PKEndFire
			
	}
}

//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//	Weapon tokens
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
Actor GNT_UG_Omni : Token {}
Actor GNT_UG_Burn  : Token {}

//---------------------------
// Omnislash
Actor OmnislashProjectile
{
	Projectile
	Speed 30
	Radius 2
	Height 2
	ReactionTime 1
	RenderStyle Add
	Translation "0:255=%[0,0,0]:[0.8,0,1.5]"
	Scale 0.7
	Alpha 0.4
	+BRIGHT
	+SEEKERMISSILE
	DamageType "ZombieGibber"
	ProjectileKickBack 0
	States
	{
	Spawn:
		QCG1 X 1 
		QCG1 X 0 A_CountDown
		Loop
	Death:
		TNT1 A 0 A_Stop
		TNT1 A 0 A_SeekerMissile(0,0,SMF_LOOK|SMF_CURSPEED,256)
		TNT1 A 0 A_JumpIfTargetInLOS("RadiusHit",360,JLOSF_PROJECTILE,80)
		TNT1 A 0 A_Jump(256,"DeathCont") //for virtual jump to inherited versions
		Goto DeathCont

		RadiusHit:	//splash damage beep
			TNT1 A 0 A_GiveToTarget("HitBeepLow",1)
			TNT1 A 0 A_Jump(256,"DeathCont") //for virtual jump to inherited versions
			Goto DeathCont		
		
	DeathCont:
		QCG1 X 0 A_Explode(random(4,6)*10,48,0,0,32)
		QCG1 XXXXXXXXXX 1 A_FadeOut
		Stop
	XDeath:
		QCG1 X 0 A_GiveToTarget("HitBeepMid",1)
		TNT1 A 0 A_Jump(255,"DeathCont")
		Goto DeathCont
	}
}

Actor OmnislashProjectileFake : OmnislashProjectile
{
	+NOINTERACTION
	+CLIENTSIDEONLY
	+NONETID
	-SEEKERMISSILE
	States
	{
	Death:
		TNT1 A 0 
		Goto DeathCont+1	//skips the damage
	XDeath:					//Shouldnt be reached, but just in case
		TNT1 A 0 
		Goto DeathCont+1	
	}
}


//---------------------------
// Burner
Actor BurnerFlamelet
{
	Projectile
	+NOINTERACTION +NOTONAUTOMAP
	+CLIENTSIDEONLY
	+NONETID
	+FORCEXYBILLBOARD
	RenderStyle Add
	Scale 0.07
	Alpha 0
	Speed 7
	Translation "0:255=%[0,0,0]:[1.5,1.0,0]"
	States
	{
	Spawn:
		TNT1 A 1
		TNT1 A 0 A_Stop
		X123 UVWX 1 A_FadeIn(0.25)
	Looper:
		X123 ABCDEFGHIJKLMNOPQRSTUVWX 1 Bright A_FadeOut(0.05)
		Loop
	}
}

Actor GauntletPuffBurn 
{
	+NOINTERACTION +NOTONAUTOMAP
	+PUFFGETSOWNER
	+PUFFONACTORS
	+FORCEXYBILLBOARD
	+MTHRUSPECIES
	Renderstyle Add
	Decal "GauntletDecal"
	DamageType "ZombieGibber"
	ProjectileKickBack 0
	Scale 0.35
	States
	{
	Spawn:	//Hit non bleeder
		TNT1 A 0 NODELAY A_GiveToTarget("HitBeepMid",1)
		TNT1 A 0 A_SpawnItemEx("GauntletFlameBurner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,128)
		Goto Crash
	XDeath:	//hit bleeder
		TNT1 A 0 A_GiveToTarget("HitBeepMid",1)
		TNT1 A 0 A_SpawnItemEx("GauntletFlameBurner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,128)	//if modified, change in Painkiller.QCD too
		TNT1 A 10 A_PlaySound("QC/Weapons/Gauntlet/Hit",7,1,0,9)
		Stop
	Crash:	//hit everything else
		TNT1 A 0 A_PlaySound("BulletHitConcreteRandom",7,0.6,0,9)
	Choose:	
		TNT1 A 0 A_Jump(256,"Type1","Type2")
	Type1:
		FX57 ABCDEFGHIJ 2 Bright
		Stop
	Type2:
		FX57 KLMNOPQRST 2 Bright
		Stop
	}
}

Actor GauntletFlameBurner
{
	Projectile
	+THRUACTORS
	+NOINTERACTION
	-NOGRAVITY
	Gravity 0.1
	+NODAMAGETHRUST
	+BLOODLESSIMPACT
	+SEEKERMISSILE
	+FORCERADIUSDMG
	RenderStyle None
	Radius 1
	Height 1
	Damage 0
	Speed 0
	Scale 0.38
	var int user_counter;
	Translation "0:255=%[0,0,0]:[1.5,1.0,0]"
	DamageType "ZombieGibber"
	ProjectileKickBack 0
	States
	{
	Spawn:
		VTFB A 0 NODELAY A_Jump(180,2) // ~30% chance it will not jump, and instead will continue causing pain to monsters
		VTFB A 0 A_ChangeFlag("Painless",1)
		
		Looper:
			VTFB A 0 A_JumpIf(user_counter>=7,"Ender")	//140 tics, 4 seconds
			VTFB A 0 A_SpawnItemEx("NailFlameFX", random(4,-4),random(4,-4),0, 0,0,frandom(0.05,0.4), 0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
			VTFB A 0 A_SeekerMissile(0,0,SMF_LOOK|SMF_CURSPEED ,256)
			VTFB A 0 A_JumpIfTargetInLOS("Sounder",360,JLOSF_PROJECTILE,50)
			VTFB A 0 A_Jump(255,"ContinueLooper")
		ContinueLooper:
			VTFB A 0 A_Explode(15,32,0,0,32)
			VTFB AAAAAAAAAA 1 Light("YellowSmallFlicker1") 
			VTFB A 0 A_SetUserVar(user_counter, user_counter+1) 
			Goto Looper
		
	Sounder:
		VTFB A 0 A_GiveToTarget("HitBeepLow",1)
		VTFB A 0 A_Jump(255,"ContinueLooper")
		Goto ContinueLooper
		
	Ender:
		VTFB AAAAAA 2 Light("YellowSmallFlicker1") A_FadeOut(0.1)
		VTFB A 2 Light("YellowSmallFlicker1") A_FadeOut(0.1)
		VTFB A 2 Light("YellowSmallFlicker2") A_FadeOut(0.1)
		VTFB A 2 Light("YellowSmallFlicker2") A_FadeOut(0.1)
		VTFB A 2 Light("YellowSmallFlicker3") A_FadeOut(0.1)
		Stop
	}
}


//---------------------------
// Omnislash + Burner
Actor OmnislashFireProjectile
{
	Projectile
	Speed 30
	Radius 2
	Height 2
	ReactionTime 1
	RenderStyle Add
	Translation "0:255=%[0,0,0]:[1.5,0.5,0]"
	Scale 0.9
	Alpha 0.5
	+BRIGHT
	+SEEKERMISSILE
	DamageType "ZombieGibber"
	ProjectileKickBack 0
	States
	{
	Spawn:
		QCG1 X 1 NODELAY A_SpawnItemEx("BurnerFlamelet",random(0,-20),random(7,-7),random(-3,3), 0,0,0, 0,SXF_NOCHECKPOSITION,128)
		QCG1 X 0 A_CountDown
		Loop
	Death:
		TNT1 A 0 A_Stop
		TNT1 A 0 A_SeekerMissile(0,0,SMF_LOOK|SMF_CURSPEED,256)
		TNT1 A 0 A_JumpIfTargetInLOS("RadiusHit",360,JLOSF_PROJECTILE,80)
		TNT1 A 0 A_Jump(256,"DeathCont") //for virtual jump to inherited versions
		Goto DeathCont

		RadiusHit:	//splash damage beep
			TNT1 A 0 A_GiveToTarget("HitBeepLow",1)
			TNT1 A 0 A_Jump(256,"DeathCont") //for virtual jump to inherited versions
			Goto DeathCont		
		
	DeathCont:
		QCG1 X 0 A_Explode(random(4,6)*10,48,0,0,32)
		QCG1 XXXXXXXXXX 1 A_FadeOut(0.13)
		Stop
	XDeath:
		QCG1 X 0 A_GiveToTarget("HitBeepMid",1)
		TNT1 A 0 A_SpawnItemEx("GauntletFlameBurner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,128)
		TNT1 A 0 A_Jump(255,"DeathCont")
		Goto DeathCont
	}
}

Actor OmnislashFireProjectileFake : OmnislashFireProjectile
{
	+NOINTERACTION
	+CLIENTSIDEONLY
	+NONETID
	-SEEKERMISSILE
	States
	{
	Death:
		TNT1 A 0 
		Goto DeathCont+1	//skips the damage
	XDeath:					//Shouldnt be reached, but just in case
		TNT1 A 0 
		Goto DeathCont+1
	}
}
